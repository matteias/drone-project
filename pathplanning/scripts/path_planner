#!/usr/bin/env python

import rospy
from crazyflie_driver.msg import Position
from tf.transformations import quaternion_from_euler
from a_star import *
from path2map import *
from nav_msgs.msg import Path
from geometry_msgs.msg import PoseStamped

path_world = "/home/maciejw/dd2419_ws/src/course_packages/dd2419_resources/worlds_json/saal3.world.json"

def exe_path(start,end):
    '''
    start: start point on map
    end: goal point on map
    '''
    pathx,pathy = find_path(start, end, path_world)
    
    pathyaw = [0]*11
    cmd = Position()
    cmd.header.stamp = rospy.Time.now()
    cmd.header.frame_id = '10' # a simple random number

    pub = rospy.Publisher('/cf1/cmd_position', Position, queue_size=2)



rospy.init_node('path_planner', anonymous=True)
rate = rospy.Rate(10)

if __name__ == '__main__':
    start = [0.3, 0.15]
    end = [1.1, 0.15]
    while not rospy.is_shutdown():
        try:
            px,py = exe_path(start,end)
        except rospy.ROSInterruptException:
            pass
        rate.sleep()