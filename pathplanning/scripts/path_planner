#!/usr/bin/env python

import rospy
from crazyflie_driver.msg import Position
from tf.transformations import quaternion_from_euler
from a_star import *
from path2map import *
from nav_msgs.msg import Path
from geometry_msgs.msg import PoseStamped

path = "/home/maciejw/dd2419_ws/src/course_packages/dd2419_resources/worlds_json/saal1.world.json"

def exe_path(stx,sty,gox,goy):
    '''
    stx,sty: start point on map
    gox,goy: goal point on map
    '''
    pathx,pathy = find_path(stx,sty,gox,goy)

    pathz = [0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4]
    pathyaw = [0]*11
    cmd = Position()
    cmd.header.stamp = rospy.Time.now()
    cmd.header.frame_id = '10' # a simple random number

    pub = rospy.Publisher('/cf1/cmd_position', Position, queue_size=2)


rospy.init_node('path_planner', anonymous=True)
rate = rospy.Rate(10)

if __name__ == '__main__':
    stx=0.5
    sty=2.5
    gox=0.5
    goy=0.5
    while not rospy.is_shutdown():
        try:
            px,py = find_path(stx,sty,gox,goy)
        except rospy.ROSInterruptException:
            pass
        rate.sleep()