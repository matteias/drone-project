#!/usr/bin/env python

import sys
import rospy
import json

import math
import tf
import tf2_ros
import tf2_geometry_msgs
import numpy as np
import collections

from tf.transformations import *
from geometry_msgs.msg import TransformStamped, Vector3, PoseStamped, Transform, PoseWithCovarianceStamped, PoseWithCovariance, Pose
from std_msgs.msg import Header
from aruco_msgs.msg import MarkerArray
from crazyflie_gazebo.msg import Position

from pyquaternion import Quaternion
queue = collections.deque(maxlen = 8)

broadcaster2 = tf2_ros.StaticTransformBroadcaster()
broadcaster = tf2_ros.TransformBroadcaster()
trans_average = None

def transformation_matrix(trans):
    mat = Quaternion(
        trans.rotation.w,
        trans.rotation.x,
        trans.rotation.y,
        trans.rotation.z)
    mat = mat.transformation_matrix
    mat[0][3] = trans.translation.x
    mat[1][3] = trans.translation.y
    mat[2][3] = trans.translation.z
    return mat

def transformation(mat):
    q = Quaternion(matrix=mat)
    trans = TransformStamped()
    trans.transform.translation.x = mat[0][3]
    trans.transform.translation.y = mat[1][3]
    trans.transform.translation.z = mat[2][3]
    trans.transform.rotation.x = q[1]
    trans.transform.rotation.y = q[2]
    trans.transform.rotation.z = q[3]
    trans.transform.rotation.w = q[0]
    return trans
    
